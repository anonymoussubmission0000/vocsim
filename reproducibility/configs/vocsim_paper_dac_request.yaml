project_root: "."
results_dir: "d:/data2/vocsim/results/dac"
features_dir: "d:/data2/vocsim/features/dac"
models_dir: &models_output_dir "d:/data2/vocsim/paper_models_scoped"
output_tables_dir: "d:/data2/vocsim/paper_outputs/vocsim_tables_generated"
run_id: "vocsim_${now:%Y%m%d_%H%M%S}"
force_cpu: false
target_sample_rate: 16000
feature_chunk_size_gb: 3
logging:
  level: INFO

dataset:
  id: anonymous-submission000/vocsimfull
  subset: null
  split: train
  subsets_to_run: &subsets_to_process [BS1, BS2, BS3, BS4, BS5, BC, HP, HS1, HS2, HU1, HU2, HU3, HU4, HW1, HW2, HW3, HW4, ES1, OC1]

whisperseg_subset_params: &ws_params
  all: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  BS1: { params: { spec_time_step: 0.0025, min_frequency: 250.0, num_trials: 1 } }
  BS2: { params: { spec_time_step: 0.0025, min_frequency: 250.0, num_trials: 1 } }
  BS3: { params: { spec_time_step: 0.0025, min_frequency: 250.0, num_trials: 1 } }
  BS4: { params: { spec_time_step: 0.0025, min_frequency: 250.0, num_trials: 1 } }
  BS5: { params: { spec_time_step: 0.0025, min_frequency: 250.0, num_trials: 1 } }
  BC: { params: { spec_time_step: 0.0025, min_frequency: 250.0, num_trials: 1 } }
  HP: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HS1: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HS2: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HW1: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HW2: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HW3: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HW4: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HU1: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HU2: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HU3: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  HU4: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
  OC1: { params: { spec_time_step: 0.01, min_frequency: 100.0, num_trials: 1 } }
  ES1: { params: { spec_time_step: 0.01, min_frequency: 50.0, num_trials: 1 } }
feature_extractors:
  - name: DACExtractor_z
    module: features.dac
    class: DACExtractor
    params:
      model_type: "16khz"
      output_type: "z"
    benchmark_this: true
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    short_name: DAC-z-raw

  - name: DACExtractor_codes
    module: features.dac
    class: DACExtractor
    params:
      model_type: "16khz"
      output_type: "codes"
    benchmark_this: true
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    short_name: DAC-c-raw

  - name: DACExtractor_latents
    module: features.dac
    class: DACExtractor
    params:
      model_type: "16khz"
      output_type: "latents"
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    benchmark_this: true
    short_name: DAC-l-raw

  - name: DACExtractor_all
    module: features.dac
    class: DACExtractor
    params:
      model_type: "16khz"
      output_type: "all"
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    benchmark_this: true
    short_name: DAC-all-raw

  - name: DAC_z_Avg
    base_extractor: DACExtractor_z
    averaging: mean_time_dim
    benchmark_this: true
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    short_name: DAC (z)

  - name: DAC_codes_Avg
    base_extractor: DACExtractor_codes
    averaging: mean_time_dim
    benchmark_this: true
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    short_name: DAC (codes)

  - name: DAC_latents_Avg
    base_extractor: DACExtractor_latents
    averaging: mean_time_dim
    benchmark_this: true
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    short_name: DAC (latents)

  - name: DAC_all_Avg
    base_extractor: DACExtractor_all
    averaging: mean_time_dim
    benchmark_this: true
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    short_name: DAC (all)

  - name: DAC_z_Avg_pca_100
    base_extractor: DAC_z_Avg
    pca: 100
    pca_load_chunks: -1
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    benchmark_this: true
    short_name: DAC (z, D=100)

  - name: DAC_codes_Avg_pca_100
    base_extractor: DAC_codes_Avg
    pca: 100
    pca_load_chunks: -1
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    benchmark_this: true
    short_name: DAC (codes, D=100)

  - name: DAC_latents_Avg_pca_100
    base_extractor: DAC_latents_Avg
    pca: 100
    pca_load_chunks: -1
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    benchmark_this: true
    short_name: DAC (latents, D=100)

  - name: DAC_all_Avg_pca_100
    base_extractor: DAC_all_Avg
    pca: 100
    pca_load_chunks: -1
    compute_distances_for: ["cosine", "euclidean", "spearman"]
    benchmark_this: true
    short_name: DAC (all, D=100)

distances:
  - name: cosine
    params:
      use_torchmetrics: true
      zero_diagonal: true
  - name: euclidean
    params:
      use_torchmetrics: true
      zero_diagonal: true
  - name: spearman
    params:
      use_gpu_if_available: true

benchmarks:
  # - name: PrecisionAtK
  #   params:
  #     k_values: [1, 5]
  - name: GlobalSeparationRate
    module: benchmarks.gsr 
    params:
      min_class_size: 5
  # - name: FValueBenchmark
  #   params:
  #     min_class_size: 5
  # - name: CSCFBenchmark
  #   params:
  #     min_class_size: 5
  # - name: ClusteringPurity
  #   params:
  #     use_distance_matrix_for_umap: true
  #     hdbscan_min_cluster_size: 5
  # - name: ClassSeparationRatio
  #   module: benchmarks.csr
  #   params:
  #     min_class_size: 5

extraction_batch_size: 12
distance_gpu_block_size: 1024